// routes/buildingRoutes.js
const express = require("express");
const router = express.Router();
const buildingController = require("../controllers/buildingController");
const floorController = require("../controllers/floorController");
const checkHost = require("../middleware/checkHost");

// Building routes
router.get("/", buildingController.getAllBuildings);  // L·∫•y danh s√°ch t·∫•t c·∫£ t√≤a nh√†
router.post("/", checkHost, buildingController.createBuilding); // Y√™u c·∫ßu host
router.get("/:buildingId", buildingController.getBuildingById);  // L·∫•y th√¥ng tin t√≤a nh√† theo ID
router.get("/check-name/:buildingName", buildingController.checkBuilding); // Ki·ªÉm tra t√≤a nh√† theo t√™n
router.delete("/:buildingId", checkHost, buildingController.deleteBuilding); // Y√™u c·∫ßu host


// Floor routes
router.get("/:buildingId/floors", floorController.getFloorsByBuilding);  // L·∫•y t·∫•t c·∫£ t·∫ßng trong t√≤a nh√†
router.post("/:buildingId/floors", checkHost, floorController.addFloor);  // Th√™m t·∫ßng m·ªõi v√†o t√≤a nh√†
router.delete("/floors/:floorId", checkHost, floorController.deleteFloor);  // X√≥a t·∫ßng theo ID

module.exports = router;

// üîπ Building routes:
// GET /buildings/ - L·∫•y danh s√°ch t·∫•t c·∫£ c√°c t√≤a nh√†.
// POST /buildings/ - T·∫°o m·ªõi m·ªôt t√≤a nh√†.
// GET /buildings/:buildingName - Ki·ªÉm tra xem t√≤a nh√† c√≥ t·ªìn t·∫°i kh√¥ng (theo t√™n).
// DELETE /buildings/:buildingId - X√≥a t√≤a nh√† theo ID.

// üîπ Floor routes:
// GET /buildings/:buildingId/floors - L·∫•y danh s√°ch t·∫•t c·∫£ t·∫ßng c·ªßa m·ªôt t√≤a nh√†.
// POST /buildings/:buildingId/floors - Th√™m t·∫ßng m·ªõi v√†o t√≤a nh√†.
// DELETE /buildings/floors/:floorId - X√≥a t·∫ßng theo ID.